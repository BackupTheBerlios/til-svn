Text Input Layer - README for developers

Contents
0. Description of this file
1. Location of the TIL
2. Configuring & building the TIL
3. Running the tests
4. Contributing code


0. Description of this file
===========================

This file explains what you need to do if you want to help developing the Text Input Layer (TIL). Please read it carefully!

1. Location of the TIL
======================

The homepage of the TIL is http://til.berlios.de. Its sources are stored in a Subversion repository. To download them, go to the project page, follow the link labeled "SVN" and do what you are told.

2. Configuring & building the TIL
=================================

To configure & build the TIL, you need the following programs/libraries:

- a C compiler (we recommend GCC)
- GNU Autoconf
- Perforce Jam
- GLIB >= 2.0, headers and libraries
- CUnit >= 2.0 (for unit tests), headers and libraries
- ncurses (recommended for unit tests), only the library


The code from the Subversion archive does not contain any configure script. You have to generate that first. To do it, issue the following commands:

$ cd _sources_directory_
$ autoconf

You will now see a script named "configure" in the directory.

Now, you must configure the TIL sources. When you do this, you also specify a build directory. We recommend to build the TIL in a separate directory to keep the directory with the sources clean. The commands you need to issue are:

$ cd _build_directory_
$ CFLAGS=-g _sources_directory_/configure --srcdir=_sources_directory_ --enable-unittests

With the CFLAGS=-g switch, the TIL will be built with debugging information - very useful. The --enable-unittests switch enables the unit tests, which are used to test if the TIL works correctly.

Now you can build the TIL with jam:

$ jam

If everything went right, you should see as the last line

$ "...updated <N> targets..."

If something went wrong, you will also see

$ "...failed updating <N> targets..."



3. Running the tests
====================

Now you can run the unit tests. Run

$ tests/curses

to run the curses version or

$ tests/console

to run the console version.


4. Contributing code
====================

We always appreciate patches. To contribute a patch, please use the Patch Manager at our BerliOS project page. Please use GNU indent to format the code. Use the file til.indent.pro for this. To do this, you have to copy it to the current directory and rename it to .indent.pro.
