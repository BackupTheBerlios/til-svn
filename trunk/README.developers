Text Input Layer - README for developers

Contents
0. Description of this file
1. Location of the TIL
2. Configuring & building the TIL
3. Running the tests
4. Contributing code


0. Description of this file
===========================

This file explains what you need to do if you want to help developing the Text Input Layer (TIL). Please read it carefully!


1. Location of the TIL
======================

The homepage of the TIL is http://til.berlios.de. Its sources are stored in a Subversion repository. To download them, go to the project page, follow the link labeled "SVN" and do what you are told.


2. Configuring & building the TIL
=================================

Note: The third party software that is available from our website (currently only a modified version of CUnit) is also contained in the directory "3rdparty" of the Subversion archive.

Unix & MinGW
------------

In addition to the software mentioned in INSTALL.unix or INSTALL.mingw, you need GNU Autoconf version 2.56 or above. If you are using MSYS/MinGW, you can download it from their website.

The code from the Subversion archive does not contain any configure script. You have to generate that first. To do it, issue the following commands:

$ cd _sources_directory_
$ autoconf

You will now see a script named "configure" in the directory.

Now you can proceed as described in the files INSTALL.unix and INSTALL.mingw, resp. For development however, we recommend to build the TIL in a separate directory to keep the directory with the sources clean. You'll also find it helpful to build the TIL with debugging information. The commands you will need to issue are:

$ cd _build_directory_
$ CFLAGS=-g _sources_directory_/configure --srcdir=_sources_directory_ --enable-unittests

Go on, read the INSTALL file for your system, configure and build the TIL and then return.


3. Running the tests
====================

Now you can run the unit tests. Run

$ tests/curses

to run the curses version or

$ tests/console

to run the console version.

Note: You have to run the tests from the top-level directory, otherwise they cannot find the plugins.


4. Contributing code
====================

We always appreciate patches. To contribute a patch, please use the Patch Manager at our BerliOS project page. Please use GNU indent to format the code. Use the file til.indent.pro for this. To do this, copy it to the current directory and rename it to ".indent.pro", then run "indent" without arguments.
